const mongoose = require('mongoose');
const {MongoMemoryServer} = require('mongodb-memory-server');
const autoIncrement = require('mongoose-auto-increment');

const mongoServer = new MongoMemoryServer({
    binary:{
        version: '4.0.10'
    },
    instance: {
        // Available engines:
        // storageEngines: [ 'devnull', 'ephemeralForTest', 'mmapv1', 'wiredTiger' ],
        storageEngine: 'wiredTiger',
    },
});

const connectToInMemoryDb = async () => {
    const url = await mongoServer.getConnectionString();
    return await mongoose.connect(url, {useNewUrlParser: true});
};

// normally I would not put sensitive data in the repo, but its an exercise, so no real data and this cluster was made only for the exercise :)
const connectToCloudDb = async () => {
    const dbRoute =
        'mongodb+srv://adminUser:adminUser@formbuilder-xptgv.mongodb.net/test?retryWrites=true&w=majority';

    return await mongoose.connect(dbRoute, {useNewUrlParser: true});
};

exports.setUpDB = () => {
    // switch this line to connect to mongo in the cloud
    // const dbConnection = process.dbMode === 'inMemory' ? connectToInMemoryDb() : connectToCloudDb();
    const dbConnection = connectToInMemoryDb();

    let db = mongoose.connection;

    autoIncrement.initialize(db);

    db.once('open', () => console.log('connected to the database'));

    db.on('error', console.error.bind(console, 'MongoDB connection error:'));

};

exports.disconnectDB = async () => {
    await mongoose.disconnect();
    await mongoServer.stop();
};
